#include<stdio.h>
#include<process.h>
#define SIZE 20

int is_empty(int top)
{
	if(top==-1)
	  return 1;
	return 0;
}

int is_full(int top)
{
	if(top==SIZE-1)
	  return 1;
	return 0;
}

void push(char stack[SIZE],int *top, char x)
{
	if(is_full(*top))
	   {
	   	printf("Stack is full");
	   	return;
	   }
	else
	{
		stack[++(*top)]=x;
	}   
}

char pop(char stack[SIZE],int *top)
{   char p;
	if(is_empty(*top))
	{
	    return -999;
	}  
	else
	   {
	   	p=stack[(*top)--];
	   	return p;
	   }
}

void paren_checker(char str[20],char stack[SIZE],int *top)
{
	int flag=0,i,p,x;
	for(i=0;str[i]!='\0';i++)
	{
		if(str[i]=='(')
		{ 
		  x=str[i];
		  push(stack,top,x);
		}
		else
		{
			p=pop(stack,top);
			if(p!='(')
			{
				flag=1;
				break;
			}
		}
	}
	 if(flag==0 && *top==-1)
		     printf("VALID");
		  else
		     printf("invalid");   
}

int main()
{
	char str[20],stack[SIZE];
	int n,top=-1;
	printf("Enter the string:");
	scanf("%s",str);
	paren_checker(str,stack,&top);
}

